{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/components/contact/contact-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport classes from \"./contact-form.module.css\";\nimport Notification from \"../ui/notification\";\nimport { useState } from \"react\";\n\nvar sendContactData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(contactDetails) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/api/contact\", {\n              method: \"POST\",\n              body: JSON.stringify(contactDetails),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(data.message || \"Something went wrong \");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sendContactData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar ContactForm = function ContactForm(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      enteredEmail = _useState[0],\n      setEnteredEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      enteredName = _useState2[0],\n      setEnteredName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      enteredMessage = _useState3[0],\n      setEnteredMessage = _useState3[1];\n\n  var _useState4 = useState(),\n      requestStatus = _useState4[0],\n      setRequestStatus = _useState4[1];\n\n  var sendMessageHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              _context2.next = 3;\n              return sendContactData({\n                email: enteredEmail,\n                name: enteredName,\n                message: enteredMessage\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendMessageHandler(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How I can help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: function onChange(ev) {\n              return setEnteredEmail(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: function onChange(ev) {\n              return setEnteredName(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          required: true,\n          value: enteredMessage,\n          onChange: function onChange(ev) {\n            return setEnteredMessage(ev.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ContactForm, \"VSjc9wduU8+bR+sytwyL17DzSlE=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/components/contact/contact-form.js"],"names":["classes","Notification","useState","sendContactData","contactDetails","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","ContactForm","props","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","sendMessageHandler","event","preventDefault","email","name","contact","form","controls","control","ev","target","value","actions"],"mappings":"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","sourcesContent":["import classes from \"./contact-form.module.css\";\nimport Notification from \"../ui/notification\";\nimport { useState } from \"react\";\n\nconst sendContactData = async (contactDetails) => {\n  const response = await fetch(\"/api/contact\", {\n    method: \"POST\",\n    body: JSON.stringify(contactDetails),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong \");\n  }\n};\n\nconst ContactForm = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredMessage, setEnteredMessage] = useState(\"\");\n  const [requestStatus, setRequestStatus] = useState();\n\n  const sendMessageHandler = async (event) => {\n    event.preventDefault();\n\n    await sendContactData({\n      email: enteredEmail,\n      name: enteredName,\n      message: enteredMessage,\n    });\n  };\n  return (\n    <section className={classes.contact}>\n      <h1>How I can help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Your Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              required\n              value={enteredEmail}\n              onChange={(ev) => setEnteredEmail(ev.target.value)}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"name\">Your Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              required\n              value={enteredName}\n              onChange={(ev) => setEnteredName(ev.target.value)}\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"message\">Your Message</label>\n          <textarea\n            id=\"message\"\n            rows=\"5\"\n            required\n            value={enteredMessage}\n            onChange={(ev) => setEnteredMessage(ev.target.value)}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}