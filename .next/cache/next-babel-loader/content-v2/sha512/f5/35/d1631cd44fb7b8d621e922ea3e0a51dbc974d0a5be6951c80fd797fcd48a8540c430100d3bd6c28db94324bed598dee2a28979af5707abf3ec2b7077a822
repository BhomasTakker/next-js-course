{"ast":null,"code":"import { MongoClient } from \"mongodb\";\n\nconst handler = async (req, res) => {\n  if (req.method === \"POST\") {\n    const {\n      email,\n      name,\n      message\n    } = req.body; // console.log(email);\n    // console.log(name);\n    // console.log(message);\n    // console.log(req.body);\n    // console.log(req);\n\n    if (!email || !email.includes(\"@\")) {\n      res.status(422).json({\n        message: \"Invalid Email. \" + email\n      });\n      return;\n    }\n\n    if (!name || name.trim() === \"\") {\n      res.status(422).json({\n        message: \"Invalid Name.\"\n      });\n      return;\n    }\n\n    if (!message || message.trim() === \"\") {\n      res.status(422).json({\n        message: \"Invalid Message.\"\n      });\n      return;\n    }\n\n    const newMessage = {\n      email,\n      name,\n      message\n    };\n    console.log(newMessage);\n\n    try {\n      const client = await MongoClient.connect(\"mongodb+srv://Thomas:G~4k.mLaY~gKP9e@cluster0.pnz7e.mongodb.net/my-blog?retryWrites=true&w=majority\");\n    } catch (error) {\n      res.status(500).json({\n        message: \"nah. went wrong\"\n      });\n      return;\n    }\n\n    const db = client.db();\n\n    try {\n      const result = await db.collection(\"messages\").insertOne(newMessage);\n      newMessage.id = result.insertedId;\n    } catch (error) {\n      client.close();\n      res.status(500).json({\n        message: \"nah. went wrong\"\n      });\n      return;\n    }\n\n    client.close();\n    res.status(201).json({\n      message: \"Successfully Stored Message!\"\n    });\n  }\n};\n\nexport default handler;","map":{"version":3,"sources":["/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/pages/api/contact.js"],"names":["MongoClient","handler","req","res","method","email","name","message","body","includes","status","json","trim","newMessage","console","log","client","connect","error","db","result","collection","insertOne","id","insertedId","close"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA2BL,GAAG,CAACM,IAArC,CADyB,CAGzB;AACA;AACA;AACA;AACA;;AAEA,QAAI,CAACH,KAAD,IAAU,CAACA,KAAK,CAACI,QAAN,CAAe,GAAf,CAAf,EAAoC;AAClCN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,QAAAA,OAAO,EAAE,oBAAoBF;AAA/B,OAArB;AACA;AACD;;AAED,QAAI,CAACC,IAAD,IAASA,IAAI,CAACM,IAAL,OAAgB,EAA7B,EAAiC;AAC/BT,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,QAAI,CAACA,OAAD,IAAYA,OAAO,CAACK,IAAR,OAAmB,EAAnC,EAAuC;AACrCT,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,UAAMM,UAAU,GAAG;AACjBR,MAAAA,KADiB;AAEjBC,MAAAA,IAFiB;AAGjBC,MAAAA;AAHiB,KAAnB;AAKAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,QAAI;AACF,YAAMG,MAAM,GAAG,MAAMhB,WAAW,CAACiB,OAAZ,CACnB,qGADmB,CAArB;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdf,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AACD,UAAMY,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;;AAEA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCT,UAApC,CAArB;AACAA,MAAAA,UAAU,CAACU,EAAX,GAAgBH,MAAM,CAACI,UAAvB;AACD,KAHD,CAGE,OAAON,KAAP,EAAc;AACdF,MAAAA,MAAM,CAACS,KAAP;AACAtB,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AACDS,IAAAA,MAAM,CAACS,KAAP;AACAtB,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF,CApDD;;AAsDA,eAAeN,OAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nconst handler = async (req, res) => {\n  if (req.method === \"POST\") {\n    const { email, name, message } = req.body;\n\n    // console.log(email);\n    // console.log(name);\n    // console.log(message);\n    // console.log(req.body);\n    // console.log(req);\n\n    if (!email || !email.includes(\"@\")) {\n      res.status(422).json({ message: \"Invalid Email. \" + email });\n      return;\n    }\n\n    if (!name || name.trim() === \"\") {\n      res.status(422).json({ message: \"Invalid Name.\" });\n      return;\n    }\n\n    if (!message || message.trim() === \"\") {\n      res.status(422).json({ message: \"Invalid Message.\" });\n      return;\n    }\n\n    const newMessage = {\n      email,\n      name,\n      message,\n    };\n    console.log(newMessage);\n    try {\n      const client = await MongoClient.connect(\n        \"mongodb+srv://Thomas:G~4k.mLaY~gKP9e@cluster0.pnz7e.mongodb.net/my-blog?retryWrites=true&w=majority\"\n      );\n    } catch (error) {\n      res.status(500).json({ message: \"nah. went wrong\" });\n      return;\n    }\n    const db = client.db();\n\n    try {\n      const result = await db.collection(\"messages\").insertOne(newMessage);\n      newMessage.id = result.insertedId;\n    } catch (error) {\n      client.close();\n      res.status(500).json({ message: \"nah. went wrong\" });\n      return;\n    }\n    client.close();\n    res.status(201).json({ message: \"Successfully Stored Message!\" });\n  }\n};\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}