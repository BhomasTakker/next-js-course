{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/pages/posts/[slug].js\";\nimport PostContent from \"../../components/posts/post-detail/post-content\";\nimport { getPostFiles, getPostData } from \"../../lib/post-util\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nconst PostDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.post.excerpt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n      post: props.post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const {\n    slug\n  } = params;\n  const postData = getPostData(slug);\n  return {\n    props: {\n      post: postData\n    },\n    revalidate: 600\n  };\n}\nexport function getStaticPaths() {\n  const paths = getPostFiles();\n  const slugs = paths.map(fname => fname.replace(/\\.md$/, \"\"));\n  return {\n    paths: slugs.map(slug => ({\n      params: {\n        slug: slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport default PostDetailPage;","map":{"version":3,"sources":["/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/pages/posts/[slug].js"],"names":["PostContent","getPostFiles","getPostData","Head","Fragment","PostDetailPage","props","post","title","excerpt","getStaticProps","context","params","slug","postData","revalidate","getStaticPaths","paths","slugs","map","fname","replace","fallback"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,IAAN,CAAWC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,IAAN,CAAWE;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEH,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,SAASG,cAAT,CAAwBC,OAAxB,EAAiC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWD,MAAjB;AAEA,QAAME,QAAQ,GAAGZ,WAAW,CAACW,IAAD,CAA5B;AACA,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEO;AADD,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,QAAMC,KAAK,GAAGhB,YAAY,EAA1B;AAEA,QAAMiB,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAc,OAAd,EAAuB,EAAvB,CAArB,CAAd;AAEA,SAAO;AACLJ,IAAAA,KAAK,EAAEC,KAAK,CAACC,GAAN,CAAWN,IAAD,KAAW;AAAED,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEA;AAAR;AAAV,KAAX,CAAV,CADF;AAELS,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,eAAejB,cAAf","sourcesContent":["import PostContent from \"../../components/posts/post-detail/post-content\";\nimport { getPostFiles, getPostData } from \"../../lib/post-util\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nconst PostDetailPage = (props) => {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.post.title}</title>\n        <meta name=\"description\" content={props.post.excerpt} />\n      </Head>\n      <PostContent post={props.post} />\n    </Fragment>\n  );\n};\n\nexport function getStaticProps(context) {\n  const { params } = context;\n  const { slug } = params;\n\n  const postData = getPostData(slug);\n  return {\n    props: {\n      post: postData,\n    },\n    revalidate: 600,\n  };\n}\n\nexport function getStaticPaths() {\n  const paths = getPostFiles();\n\n  const slugs = paths.map((fname) => fname.replace(/\\.md$/, \"\"));\n\n  return {\n    paths: slugs.map((slug) => ({ params: { slug: slug } })),\n    fallback: false,\n  };\n}\n\nexport default PostDetailPage;\n"]},"metadata":{},"sourceType":"module"}