{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/components/contact/contact-form.js\";\nimport classes from \"./contact-form.module.css\";\nimport Notification from \"../ui/notification\";\nimport { useEffect, useState } from \"react\";\n\nconst sendContactData = async contactDetails => {\n  const response = await fetch(\"/api/contact\", {\n    method: \"POST\",\n    body: JSON.stringify(contactDetails),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong \");\n  }\n};\n\nconst ContactForm = props => {\n  const {\n    0: enteredEmail,\n    1: setEnteredEmail\n  } = useState(\"\");\n  const {\n    0: enteredName,\n    1: setEnteredName\n  } = useState(\"\");\n  const {\n    0: enteredMessage,\n    1: setEnteredMessage\n  } = useState(\"\");\n  const {\n    0: requestStatus,\n    1: setRequestStatus\n  } = useState();\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState();\n  useEffect(() => {\n    if (requestStatus === \"pending\" || requestStatus === \"error\") {\n      const timer = setTimeout(() => {\n        setRequestStatus(null);\n        setErrorMessage();\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [requestStatus]);\n\n  const sendMessageHandler = async event => {\n    event.preventDefault();\n    setRequestStatus(\"pending\");\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage\n      });\n    } catch (error) {\n      setRequestStatus(\"error\");\n      setErrorMessage(error);\n    }\n\n    setRequestStatus(\"success\");\n  };\n\n  let notification;\n\n  if (requestStatus === \"pending\") {\n    notification = {\n      status: \"pending\",\n      title: \"Sending message...\",\n      message: \"Your message on way\"\n    };\n  }\n\n  if (requestStatus === \"success\") {\n    notification = {\n      status: \"success\",\n      title: \"success message...\",\n      message: \"Your message success way\"\n    };\n  }\n\n  if (requestStatus === \"error\") {\n    notification = {\n      status: \"error\",\n      title: \"error message...\",\n      message: errorMessage\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How I can help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: ev => setEnteredEmail(ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: ev => setEnteredName(ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          required: true,\n          value: enteredMessage,\n          onChange: ev => setEnteredMessage(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/thomas.bakker/Desktop/Udemy/next-js/nextjs-project/components/contact/contact-form.js"],"names":["classes","Notification","useEffect","useState","sendContactData","contactDetails","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","ContactForm","props","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","errorMessage","setErrorMessage","timer","setTimeout","clearTimeout","sendMessageHandler","event","preventDefault","email","name","error","notification","status","title","contact","form","controls","control","ev","target","value","actions"],"mappings":"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","sourcesContent":["import classes from \"./contact-form.module.css\";\nimport Notification from \"../ui/notification\";\nimport { useEffect, useState } from \"react\";\n\nconst sendContactData = async (contactDetails) => {\n  const response = await fetch(\"/api/contact\", {\n    method: \"POST\",\n    body: JSON.stringify(contactDetails),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong \");\n  }\n};\n\nconst ContactForm = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredMessage, setEnteredMessage] = useState(\"\");\n  const [requestStatus, setRequestStatus] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n\n  useEffect(() => {\n    if (requestStatus === \"pending\" || requestStatus === \"error\") {\n      const timer = setTimeout(() => {\n        setRequestStatus(null);\n        setErrorMessage();\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [requestStatus]);\n\n  const sendMessageHandler = async (event) => {\n    event.preventDefault();\n    setRequestStatus(\"pending\");\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage,\n      });\n    } catch (error) {\n      setRequestStatus(\"error\");\n      setErrorMessage(error);\n    }\n\n    setRequestStatus(\"success\");\n  };\n\n  let notification;\n\n  if (requestStatus === \"pending\") {\n    notification = {\n      status: \"pending\",\n      title: \"Sending message...\",\n      message: \"Your message on way\",\n    };\n  }\n  if (requestStatus === \"success\") {\n    notification = {\n      status: \"success\",\n      title: \"success message...\",\n      message: \"Your message success way\",\n    };\n  }\n  if (requestStatus === \"error\") {\n    notification = {\n      status: \"error\",\n      title: \"error message...\",\n      message: errorMessage,\n    };\n  }\n\n  return (\n    <section className={classes.contact}>\n      <h1>How I can help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Your Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              required\n              value={enteredEmail}\n              onChange={(ev) => setEnteredEmail(ev.target.value)}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"name\">Your Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              required\n              value={enteredName}\n              onChange={(ev) => setEnteredName(ev.target.value)}\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"message\">Your Message</label>\n          <textarea\n            id=\"message\"\n            rows=\"5\"\n            required\n            value={enteredMessage}\n            onChange={(ev) => setEnteredMessage(ev.target.value)}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}